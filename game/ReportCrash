#!/bin/sh

. mush.config

# This is where we send bugs.

bug_address="tinymush-bugs@godlike.com"

# Check to make sure we have a core file.

if [ ! -s core ]; then
    echo "No non-zero-size core file found."
    exit 1
fi

# Check to make sure that we can run gdb.

gdb_path=`which gdb`
if [ ! -x "$gdb_path" ]; then
    echo "gdb does not appear to be in your path. Is it installed?"
    exit 1
fi

# Find a mailer. 

mailer=`which Mail`
if [ ! -x "$mailer" ]; then
    mailer=`which mail`
    if [ ! -x "$mailer" ]; then
	echo "Cannot find mail or Mail program."
        exit 1
   fi
fi

# Find out how many frames we have in the stack trace.

echo "Determining number of stack frames (ignore non-fatal errors)..."

echo "where" > gdb_script.$$
echo "quit" >> gdb_script.$$
num_frames=`$gdb_path --nx --command=gdb_script.$$ $BIN/netmush core | \
    tail -1 | cut -f1 -d" " | cut -f2 -d"#"`

if [ "$num_frames" = "0" ]; then
    echo "No frames in the stack trace. Sorry."
    exit 1
fi

# Frames are numbered 0 through N - 1.

total_frames=`expr $num_frames + 1`

# Generate the script we need.

echo
echo "Generating debugger script..."

echo 'echo \\n########## Stack trace\\n' > gdb_script.$$
echo "where" >> gdb_script.$$
echo 'echo \\n########## Current frame\\n' >> gdb_script.$$
echo "info frame" >> gdb_script.$$
echo 'echo \\n### Arguments\\n' >> gdb_script.$$
echo "info args" >> gdb_script.$$
echo 'echo \\n### Locals\\n' >> gdb_script.$$
echo "info locals" >> gdb_script.$$

i=1
while [ $i -lt $total_frames ]; do
    echo 'echo \\n########## Next Frame Up\\n' >> gdb_script.$$
    echo "up" >> gdb_script.$$
    echo 'echo \\n### Arguments\\n' >> gdb_script.$$
    echo "info args" >> gdb_script.$$
    echo 'echo \\n### Locals\\n' >> gdb_script.$$
    echo "info locals" >> gdb_script.$$
    i=`expr $i + 1`
done

echo 'echo \\n########## End of backtrace\n' >> gdb_script.$$

echo "quit" >> gdb_script.$$

echo
echo "Dumping the contents of $total_frames stack frames..."

$gdb_path --nx --command=gdb_script.$$ $BIN/netmush core > gdb_output.$$

rm -f gdb_script.$$

echo
echo "Sending mail to $bug_address using $mailer..."

$mailer -s "Stack trace for $GAMENAME" $bug_address < gdb_output.$$

rm -f gdb_output.$$

echo
echo "Done."
