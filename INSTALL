This is the README file for TinyMUX.

*** When you unload the database to flat file format it is important to use
    your original db_unload/dbconvert.
*** You MUST unload to flatfile if you are using a disk-based database when
    you move to a new machine, no matter what platform; only the flatfile is
    portable!

Refer to the file CHANGES for information about new features, commands,
and bug fixes.

TinyMUX is currently being developed under SunOS 4.1.4 and IRIX 6.3.

The latest version of this code can generally be found running at:
From the Ashes: ashes.sneakers.org 5000

Conversions from Other Database Formats:
---------------------------------------

TinyMUX 1.5 has been proven to read the following database formats:
   TinyMUSH 2.0 (all versions)
   TinyMUSH 2.2.0 or 2.2.1 release version (not beta)
   PennMUSH 1.50 patchlevel 8-15.
   PennMUSH DarkZone 1.50.

Instructions for Building:
-------------------------

[NOTE: It is HIGHLY recommended that you preserve a previous setup if you
had one while converting, and make sure the conversion process has completed
successfully before you delete your old distribution.]

1.  cd to the src/gdbm-1.7.3 directory. Run 'configure', then 'make'.

2.  cd .. back to the source directory. Run 'configure'.  This will customize
    autoconf.h and Makefile for your system.

3.  Edit the Configuration section of the Makefile.  Most likely, all you will
    need to change are any C flags needed by your particular C compiler,
    (in particular -fpcc-struct-return), and any esoteric libraries needed by
    your system. Also, there are some #defines in config.h that you may want
    to change, but in general, the defaults should not be changed.

    Within the Makefile, you can also enable:
	- Memory based database handling (as opposed to the default disk
	  based handling, see README.MEMORY)
	- Radix string compression (see README.COMPRESSION)

4.  Run make depend, then make.  This will produce netmux, mkindx, slave,
    and dbconvert.

5.  Here are some hints to remember if you are installing for a previously
    existing setup:
       - All databases go in game/data. All text files go in game/text.
       - The scripts db_load, db_unload, and db_check may be found in the
         game/data directory.
       - If you change the GAMENAME in mux.config, be sure to change the
         filenames in <gamename>.conf as well.
       - You should NEVER need to modify anything in the bin directory.
       - You should ALWAYS unload to flatfile, and reload when you change
         or upgrade distributions. 
       - Read 'wizhelp config parameters' when you get the MUX started.
         If you are upgrading from PennMUSH, for example where the master
         room is set as #2, you would have to place the config parameter
         'master_room 2' in your configuration file.
       - Database numbers in <gamename>.conf should NEVER have '#' in front of
         them, only the number itself is necessary.
       - If you had a mail database previously, remember to adjust
         mail_expiration accordingly, or else ALL @mail older than the
         default value of 14 days will be deleted.
       - If you do not want to use the built-in +help command, redefine
         PLUSHELP_COMMAND in config.h to be something else.

5a. If you are starting from scratch, do the following:
       - cd to the game directory.
       - Make your configuration file, as described later in this file under
         the heading 'Making a New Configuration File'
       - [csh] bin/netmux -s <your-mud-name>.conf >& <your-mud-name>.log &
         [sh]  bin/netmux -s <your-mud-name>.conf > <your-mud-name>.log 2>&1 &
       - Log in to the mud as player wizard (password potrzebie), and shut it
         down.

5b. If you are converting an existing TinyMUSH 2.0 database created by
    patchlevel 0 (database version 3), do the following:
       - cd to the game directory.
       - Log in to the mud and shut it down.  If you are running a script
         to automatically restart the mush if it goes down, also kill that
         script.
       - Unload the database with the command:
            o db_unload <mud-name>.gdbm <mud-name>.db.new <mud-name>.db.FULL
       - cd to the source directory.
       - Run make install.
       - cd back to the game directory.
       - Delete the files <mud-name>.gdbm, <mud-name>.db, and <mud-name>.db.new
       - Reload the database with the command:
            o db_load <mud-name>.gdbm <mud-name>.db.FULL <mud-name>.db.new

5c. If you are converting an existing TinyMUSH 2.0 database created by
    patchlevels 1 through 4 (database version 4) or patchlevels 5 or 6
    (database version 5) do the following:
       - cd to the game directory.
       - Log in to the mud and shut it down.  If you are running a script
         to automatically restart the mush if it goes down, also kill that
         script.
       - Unload the database with the command:
            o db_unload <mud-name>.gdbm <mud-name>.db.new <mud-name>.db.FULL
       - cd to the source directory.
       - Run make install.
       - cd back to the game directory.
       - Delete the files <mud-name>.gdbm.db, <mud-name>.gdbm.dir,
         <mud-name>.gdbm.pag, <mud-name>.db, and <mud-name>.db.new
       - If you are running on an HP-UX system, create the database files:
            o touch <mud-name>.gdbm.db <mud-name>.gdbm.dir <mud-name>.gdbm.pag
            o chmod 600 <mud-name>.gdbm.*
       - Type 'head <mud-name>.db.FULL'.  If the first line is '+V8710',
         do the following:
            o mv <mud-name>.db.FULL <mud-name>.db.FULL1
            o echo '+V8709' | cat - <mud-name>.db.FULL1 > <mud-name>.db.FULL
            o In the next step, ignore the error
              'Duplicate MUSH version header entry  ...'
       - Reload the database with the command:
            o db_load <mud-name>.gdbm <mud-name>.db.FULL <mud-name>.db.new

5d. If you are converting a PennMUSH 1.50 database:
       - Copy the database to the MUX directory, and rename it to
         <mud-name>.db.new.
       - Copy the mail database to the MUX directory and rename it to
         mail.db, or whatever your mail_database configuration option is
         set to.
       - Run 'Startmux', log in to the MUX as a wizard and shut it down.
       - NOTE: If you are experiencing conversion problems with your Penn
         database, reload your old Penn setup, and do a @dump/paranoid.
         This should eliminate hard newlines that mess up the conversion
         process.

5e. If you are converting a PennMUSH DarkZone database:
       - Copy the database to the MUX directory, and rename it to
         <mud-name>.db.
       - Append your mail alias database to the end of your mail database,
         using cat or a similar utility.
       - Copy the mail database to the MUX directory and rename it to
         mail.db, or whatever your mail_database configuration option is
         set to.
       - Copy the COMMAC.DB to the MUX directory and rename it to commac.db,
         or whatever your commac_database configuration option is set to.
       - Run 'Startmux', log in to the MUX as a wizard and shut it down.
       - NOTE: If you are experiencing conversion problems with your DZ
         database, reload your old DZ setup, and do a @dump/paranoid.
         This should eliminate hard newlines that mess up the conversion
         process.

5f. If you are converting a database from TinyMUSH 2.0.10 or Tinymush 2.2:
       - cd to the game directory.
       - Log in to the mud and shut it down.  If you are running a script
         to automatically restart the mush if it goes down, also kill that
         script.
       - Unload the database with the command, making sure to use your
         ORIGINAL dbconvert:
            o db_unload <mud-name>.gdbm <mud-name>.db.new <mud-name>.db.FULL
       - Copy <mud-name>.db.FULL to the MUX directory.
       - Reload the database with the command, using your new dbconvert:
            o db_load <mud-name>.gdbm <mud-name>.db.FULL <mud-name>.db.new

6.  Edit the .txt files to your liking, in particular connect.txt and motd.txt.
    This is not necessary if you are reinstalling TinyMUX 1.4.

7.  Start up TinyMUX 1.4 by running Startmux.

8.  @ccreate a channel named 'Public', and a channel named 'Guests' from
    within the MUX. Created players will automatically be joined to 'Public'
    with alias 'pub', guests will automatically join 'Guests' with alias 'g'.

Environment:
-----------

TinyMUX 1.4 should run on must Unixes with BSD-style sockets and a C compiler
that groks function prototypes. It is 64-bit 'clean' code.  It has been run
successfully on the following platforms:

SunOS 4.1.3, 4.1.4
Linux kernels 1.2.3 - 2.1.x (Alpha, Intel, and Sparc)
NeXTStep version 2.0, 3.3, OpenStep 4.0
FreeBSD 2.0.5R, 2.1
Solaris 2.4, 2.5, 2.5.1
Ultrix 4.2
AIX 4.0
Digital UNIX 3.2, 4.0.
IRIX 5.3, 6.2, 6.4

If you get TinyMUX 1.4 working on another platform, please let us know
about it!
